#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'
AUTHOR=""
AUTHOR_DATE=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    --author)
        AUTHOR="$2"; shift 2 ;;
    --author-date)
        AUTHOR_DATE="$2"; shift 2 ;;
    -h|--help)
        echo "Uso: gh summary [--author USER] [--author-date AAAA-MM-DD]"; exit 0 ;;
    *)
        echo "Flag desconhecida: $1" >&2; exit 1 ;;
  esac
done

[[ -z "$AUTHOR"      ]] && AUTHOR=$(gh api user --jq .login)
[[ -z "$AUTHOR_DATE" ]] && AUTHOR_DATE=$(date +%F)

mapfile -t COMMITS < <(
  gh search commits           \
     --author        "$AUTHOR" \
     --author-date   "$AUTHOR_DATE" \
     --limit 100              \
     --json repository,sha    \
     --jq '.[]|"\(.repository.fullName) \(.sha)"'
)

if (( ${#COMMITS[@]} == 0 )); then
  printf '❌ Nenhum commit encontrado para %s (autor: %s)\n' "$AUTHOR_DATE" "$AUTHOR" >&2
  exit 1
fi

STATS=$(
  printf '%s\n' "${COMMITS[@]}" |
  xargs -n2 -P"$(nproc)" bash -c '
     repo=$1 sha=$2
     resp=$(gh api "repos/$repo/commits/$sha") || exit 0
     add=$(jq .stats.additions  <<<"$resp")
     del=$(jq .stats.deletions  <<<"$resp")
     chars=$(jq -r .files[].patch <<<"$resp" |
            grep -E "^[+-][^+-]" |
            sed "s/^[+-]//" | wc -m)
     echo $((add+del)) $chars
  ' _
)

IFS=' ' read -r COMMIT_N LINES_N CHARS_N <<< \
  "$(awk '{c++; l+=$1; m+=$2} END{print c,l,m}' <<<"$STATS")"

rows=(
  "Commits       $COMMIT_N"
  "Linhas totais $LINES_N"
  "Caracteres    $CHARS_N"
)
max=0; for r in "${rows[@]}"; do (( ${#r}>max ))&&max=${#r}; done
W=$((max+4)); border=$(printf '═%.0s' $(seq 1 $W))

echo
printf "╔%s╗\n" "$border"
title=" Resumo de $AUTHOR_DATE "
pl=$(( (W-${#title})/2 )); pr=$(( W-pl-${#title} ))
printf "║%*s%s%*s║\n" $pl '' "$title" $pr ''
printf "╠%s╣\n" "${border//═/─}"
for r in "${rows[@]}"; do
  pl=$(( (W-${#r})/2 )); pr=$(( W-pl-${#r} ))
  printf "║%*s%s%*s║\n" $pl '' "$r" $pr ''
done
printf "╚%s╝\n" "$border"
